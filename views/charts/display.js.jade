block script
	link(rel='stylesheet' href='//ajax.googleapis.com/ajax/libs/jqueryui/1.11.0/themes/smoothness/jquery-ui.css')
	script(src='//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js')
	script(src='//ajax.googleapis.com/ajax/libs/jqueryui/1.11.0/jquery-ui.min.js')
	script(src='http://cdnjs.cloudflare.com/ajax/libs/gsap/1.13.1/TweenMax.min.js')
	script(src='https://www.google.com/jsapi')
	script.
		var ENTER_KEY = 13;
		function dateFormat(date) {
			DATESEPARATOR = '-';
			return date.getFullYear() + DATESEPARATOR +
				(date.getMonth()+1) + DATESEPARATOR + date.getDate();
		}

		function timeFormat(date) {
			return date.getHours() + ':' + date.getMinutes();
		}

		function updateCharts(key, value) {

			$('#ajax-info').show(500, 'swing');
			$.ajax({
				type: 'POST',
				url: '/api/ajax/updateCharts?' + key + '=' + value
			}).done(function(response, textStatus, xhr) {
				console.log('updateConfig onreadystatechange response: ', response);
				updateChartData(response.chartData, response.chartOptions);
				//document.ajaxForm.testajax.value = xmlhttp.response;
			}).fail(function(xhr, textStatus, errorThrown) {
			}).always(function() {
				$('#ajax-info-loading').text('Chart ready!');
				setTimeout(function(){
					$('#ajax-info').hide(1000, 'swing');
				}, 800);
			});
		}

		google.load("visualization", "1", {packages:["corechart"]});
		google.setOnLoadCallback(init);

		cloudantdata = [];
		var options = { 
			title: 'Steps Acummulated',
			hAxis: {title: '#{config.period}', titleTextStyle: {color: 'black'}}
		};
		
		function updateChartData(newData, opt) {
			cloudantdata = newData;
			options = opt;
			$('#chartdiv').css('height', 80 * cloudantdata.length + 10);
			drawChart();
		}
		
		function init() {
			console.log('init function called');
			updateCharts("period", "default");
		}

		function drawChart() {
			console.log('typeof ', typeof cloudantdata);
			console.log(cloudantdata);
			var data = google.visualization.arrayToDataTable(cloudantdata); 
			var chart;
			if (chart === undefined) 
				chart = new google.visualization.BarChart(document.getElementById('chartdiv'));
			chart.draw(data, options);
		}

		function submitConfiguration(form) {
			console.log('submitConfiguration ', this);
			for (idx in form.elements) {
				console.log(idx, '=', form.elements[idx].value);
			}
			return false;
		}

		function updateTime(key, date, hour) {
			if (date.length > 0) {
				if (hour.length > 0) {
					console.log(date, hour);
					dateString = date + ' ' + hour;
					dateObject = new Date(dateString);
					console.log(dateObject);
					updateCharts(key,dateObject.toISOString());
				} else {
					//$('#' + key + 'Hour').val("00:00");
					updateTime(key, date, "00:00");
				}
			}
		}

		$().ready(function() {
			now = new Date();
			$('#endTimeDate').val(dateFormat(now));
			$('#endTimeHour').val(timeFormat(now));
			now.setFullYear(now.getFullYear(), now.getMonth() - 1);
			$('#startTimeDate').val(dateFormat(now));
			$('#startTimeHour').val(timeFormat(now));

		// Event Handlers
			$('#startTimeDate, #startTimeHour').keyup(function(e) {
				if (e.which === ENTER_KEY) {
					updateTime("startTime", $('#startTimeDate').val(), $('#startTimeHour').val());
				}
			});

			$('#endTimeDate, #endTimeHour').keyup(function(e) {
				if (e.which === ENTER_KEY) {
					updateTime("endTime", $('#endTimeDate').val(), $('#endTimeHour').val());
				}
			});

			$('#startTimeDate, #startTimeHour, #endTimeDate, #endTimeHour').blur(function(e) {
				var e = jQuery.Event("keyup");
				e.which = ENTER_KEY;
				$(this).trigger(e);
			});

			$('.periodradiobuttons').click(function(e) {
				//console.log('period=', e.target.value);
				updateCharts("period", e.target.value);
			});
		});
//			$( "#ajax-info" ).dialog({
//					autoOpen: false,
//					show: {
//						duration: 300
//					},
//					hide: {
//						duration: 500
//					}
//			});
